// killfuncs.go
package main

import (
	"bufio"
	"fmt"
	"os"
	"strconv"
	"strings"
)

func removeFuncs(linesToDelete map[string]map[int]bool) {
	for file, lines := range linesToDelete {
		input, err := os.ReadFile(file)
		if err != nil {
			fmt.Fprintf(os.Stderr, "read %s: %v\n", file, err)
			continue
		}

		scanner := bufio.NewScanner(strings.NewReader(string(input)))
		var output []string

		var skip bool
		var braceCount int
		var currentLine int

		for scanner.Scan() {
			currentLine++
			line := scanner.Text()

			if lines[currentLine] {
				skip = true
				braceCount = 0
			}

			if skip {
				braceCount += strings.Count(line, "{")
				braceCount -= strings.Count(line, "}")
				if braceCount <= 0 {
					skip = false
				}
				continue
			}

			output = append(output, line)
		}

		os.WriteFile(file, []byte(strings.Join(output, "\n")), 0644)
		fmt.Printf("Cleaned %s\n", file)
	}
}

func main() {
	f, err := os.Open("deadcode.txt")
	if err != nil {
		panic(err)
	}
	defer f.Close()

	linesToDelete := make(map[string]map[int]bool)
	scanner := bufio.NewScanner(f)
	for scanner.Scan() {
		parts := strings.Split(scanner.Text(), ":")
		if len(parts) != 2 {
			continue
		}
		file := parts[0]
		line, _ := strconv.Atoi(parts[1])
		if _, ok := linesToDelete[file]; !ok {
			linesToDelete[file] = make(map[int]bool)
		}
		linesToDelete[file][line] = true
	}

	removeFuncs(linesToDelete)
}
