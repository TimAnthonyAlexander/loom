// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT
import {bridge} from '../models';
import {adapter} from '../models';
import {context} from '../models';
import {engine} from '../models';
import {config} from '../models';
import {tool} from '../models';

export function Approve(arg1:string,arg2:boolean):Promise<void>;

export function ChooseSaveFile(arg1:string):Promise<string>;

export function ChooseWorkspace():Promise<string>;

export function ClearConversation():Promise<void>;

export function DeleteMemory(arg1:string):Promise<boolean>;

export function EmitAssistant(arg1:string):Promise<void>;

export function EmitBilling(arg1:string,arg2:string,arg3:number,arg4:number,arg5:number,arg6:number,arg7:number):Promise<void>;

export function EmitReasoning(arg1:string,arg2:boolean):Promise<void>;

export function FindFiles(arg1:string,arg2:string,arg3:number):Promise<Array<string>>;

export function GetConversations():Promise<Record<string, any>>;

export function GetGlobalUsage():Promise<Record<string, any>>;

export function GetMemories():Promise<Array<Record<string, string>>>;

export function GetRules():Promise<Record<string, Array<string>>>;

export function GetSettings():Promise<Record<string, string>>;

export function GetSymbolsCount():Promise<number>;

export function GetTools():Promise<Array<Record<string, any>>>;

export function GetUsage():Promise<Record<string, any>>;

export function IndexDone(arg1:number):Promise<void>;

export function IndexProgress(arg1:number,arg2:number,arg3:string):Promise<void>;

export function IndexStart(arg1:number):Promise<void>;

export function ListWorkspaceDir(arg1:string):Promise<bridge.UIListDirResult>;

export function LoadConversation(arg1:string):Promise<void>;

export function NewConversation():Promise<string>;

export function OpenFileInUI(arg1:string):Promise<void>;

export function OpenProjectDataDir():Promise<void>;

export function PromptApproval(arg1:string,arg2:string,arg3:string):Promise<boolean>;

export function ReadWorkspaceFile(arg1:string):Promise<bridge.UIReadFileResult>;

export function ReindexSymbols():Promise<void>;

export function ReloadMCP():Promise<void>;

export function ResetGlobalUsage():Promise<void>;

export function ResetUsage():Promise<void>;

export function SaveRules(arg1:Record<string, Array<string>>):Promise<void>;

export function SaveSettings(arg1:Record<string, string>):Promise<void>;

export function SearchCode(arg1:string,arg2:string,arg3:number):Promise<Array<Record<string, any>>>;

export function SendChat(arg1:string,arg2:string):Promise<void>;

export function SendUserMessage(arg1:string):Promise<void>;

export function SetAttachments(arg1:Array<string>):Promise<void>;

export function SetBusy(arg1:boolean):Promise<void>;

export function SetModel(arg1:string):Promise<void>;

export function SetWorkspace(arg1:string):Promise<void>;

export function UpdateEditorContext(arg1:string,arg2:number,arg3:number):Promise<void>;

export function WithConfig(arg1:adapter.Config):Promise<bridge.App>;

export function WithContext(arg1:context.Context):Promise<bridge.App>;

export function WithEngine(arg1:engine.Engine):Promise<bridge.App>;

export function WithSettings(arg1:config.Settings):Promise<bridge.App>;

export function WithTools(arg1:tool.Registry):Promise<bridge.App>;

export function WriteWorkspaceFile(arg1:Record<string, string>):Promise<Record<string, string>>;
